@model appInventory.Models.producto

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Menu/Menu.cshtml";
}
<div class="overlayPanel" style="margin-top: 2%">
    <div class="row">

        <div style="text-align:left;">
            <a href="@Url.Action("Index", "producto")"> <p class="fa fa-arrow-left fa-2x" aria-hidden="true" style="color: black;" btn> </p></a>
        </div>
        <h2>Crear producto</h2>
        @if (ViewBag.crearError != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
                @ViewBag.crearError
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            <script>
                setTimeout(function () {
                    var alertElement = document.querySelector('.alert');
                    if (alertElement) {
                        var alert = bootstrap.Alert.getOrCreateInstance(alertElement);
                        alert.close();
                    }
                }, 2000);
            </script>
        }
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="row form-horizontal" style="display: flex; flex-wrap: wrap; margin-top: 15px">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-lg-6">
                    <div class="form-group" style="margin-top: 15px">
                        <label class="control-label col-md-2">Código</label>
                        <div>
                            @Html.EditorFor(model => model.codigoProducto, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.codigoProducto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="margin-top: 15px">
                        <label class="control-label col-md-2">Nombre</label>
                        <div>
                            @Html.EditorFor(model => model.nombreProducto, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.nombreProducto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group" style="margin-top: 15px; margin-left: 9%">
                        <label class="control-label col-md-2">Categoria</label>
                        <div>
                            @Html.DropDownList("categoriaId", null, htmlAttributes: new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.categoriaId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div style="margin-top: 1%">
                    <button id="btnCrear" type="submit" class="btn btn-success">
                        Crear
                        <span id="spinner" class="spinner-border spinner-border-sm d-none" aria-hidden="true"></span>
                        <span class="visually-hidden" role="status">Cargando...</span>
                    </button>
                </div>
            </div>
        }


    </div>
</div>
<script>
    const form = document.querySelector("form");
    const spinner = document.getElementById("spinner");
    const btn = document.getElementById("btnCrear");
    if (form && spinner && btn) {
        form.addEventListener("submit", function () {
            btn.disabled = true;
            setTimeout(() => {
                spinner.classList.remove("d-none");
                btn.disabled = false;
            }, 2000);
        });
    }
</script>
