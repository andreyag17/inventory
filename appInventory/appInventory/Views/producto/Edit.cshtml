@model appInventory.Models.producto

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Menu/Menu.cshtml";
}
<div class="overlayPanel">
    <div class="row">
        @if (ViewBag.EditarMensaje != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
                @ViewBag.EditarMensaje
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        <div style="text-align:left;">
            <a href="@Url.Action("Index", "producto")"> <p class="fa fa-arrow-left fa-2x" aria-hidden="true" style="color:black;" btn></p></a>
        </div>
        <div class="container mt-2">
            <h1>Editar producto</h1>
            <div class="row">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="row form-horizontal" style="display: flex; flex-wrap: wrap; margin-top: 10px">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.codigoProducto)
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Nombre del producto</label>
                                <div>
                                    @Html.EditorFor(model => model.nombreProducto, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.nombreProducto, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>



                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Categoria</label>
                                <div>
                                    @Html.DropDownList("categoriaId", null, htmlAttributes: new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.categoriaId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="margin-top: 1%">
                            <div>
                                <button id="btnGuardar" type="submit" class="btn btn-success">
                                    Guardar
                                    <span id="spinner" class="spinner-border spinner-border-sm d-none" aria-hidden="true"></span>
                                    <span class="visually-hidden" role="status">Cargando...</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script>
     const form = document.querySelector("form");
     const spinner = document.getElementById("spinner");
     const btn = document.getElementById("btnGuardar");

     if (form && spinner && btn) {
         form.addEventListener("submit", function () {
             btn.disabled = true;
             setTimeout(() => {
                 spinner.classList.remove("d-none");
                 btn.disabled = false;
             }, 2000);
         });
     }
</script>
